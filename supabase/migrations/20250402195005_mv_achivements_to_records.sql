create type "public"."modality" as enum ('virtual-reality', 'television', 'other');

create type "public"."record_types" as enum ('strength', 'balance', 'endurance', 'coordination', 'motor-function', 'range-of-motion', 'other');

revoke delete on table "public"."patient_achievements" from "anon";

revoke insert on table "public"."patient_achievements" from "anon";

revoke references on table "public"."patient_achievements" from "anon";

revoke select on table "public"."patient_achievements" from "anon";

revoke trigger on table "public"."patient_achievements" from "anon";

revoke truncate on table "public"."patient_achievements" from "anon";

revoke update on table "public"."patient_achievements" from "anon";

revoke delete on table "public"."patient_achievements" from "authenticated";

revoke insert on table "public"."patient_achievements" from "authenticated";

revoke references on table "public"."patient_achievements" from "authenticated";

revoke select on table "public"."patient_achievements" from "authenticated";

revoke trigger on table "public"."patient_achievements" from "authenticated";

revoke truncate on table "public"."patient_achievements" from "authenticated";

revoke update on table "public"."patient_achievements" from "authenticated";

revoke delete on table "public"."patient_achievements" from "service_role";

revoke insert on table "public"."patient_achievements" from "service_role";

revoke references on table "public"."patient_achievements" from "service_role";

revoke select on table "public"."patient_achievements" from "service_role";

revoke trigger on table "public"."patient_achievements" from "service_role";

revoke truncate on table "public"."patient_achievements" from "service_role";

revoke update on table "public"."patient_achievements" from "service_role";

revoke delete on table "public"."vr_sessions" from "anon";

revoke insert on table "public"."vr_sessions" from "anon";

revoke references on table "public"."vr_sessions" from "anon";

revoke select on table "public"."vr_sessions" from "anon";

revoke trigger on table "public"."vr_sessions" from "anon";

revoke truncate on table "public"."vr_sessions" from "anon";

revoke update on table "public"."vr_sessions" from "anon";

revoke delete on table "public"."vr_sessions" from "authenticated";

revoke insert on table "public"."vr_sessions" from "authenticated";

revoke references on table "public"."vr_sessions" from "authenticated";

revoke select on table "public"."vr_sessions" from "authenticated";

revoke trigger on table "public"."vr_sessions" from "authenticated";

revoke truncate on table "public"."vr_sessions" from "authenticated";

revoke update on table "public"."vr_sessions" from "authenticated";

revoke delete on table "public"."vr_sessions" from "service_role";

revoke insert on table "public"."vr_sessions" from "service_role";

revoke references on table "public"."vr_sessions" from "service_role";

revoke select on table "public"."vr_sessions" from "service_role";

revoke trigger on table "public"."vr_sessions" from "service_role";

revoke truncate on table "public"."vr_sessions" from "service_role";

revoke update on table "public"."vr_sessions" from "service_role";

alter table "public"."patient_achievements" drop constraint "patient_achievements_patient_uid_fkey";

alter table "public"."patient_achievements" drop constraint "patient_achievements_vr_session_id_fkey";

alter table "public"."vr_sessions" drop constraint "vr_sessions_patient_id_fkey";

alter table "public"."patient_achievements" drop constraint "patient_achievements_pkey";

alter table "public"."vr_sessions" drop constraint "vr_sessions_pkey";

drop index if exists "public"."idx_vr_sessions_patient_id";

drop index if exists "public"."idx_vr_sessions_patient_uid";

drop index if exists "public"."patient_achievements_pkey";

drop index if exists "public"."vr_sessions_pkey";

drop table "public"."patient_achievements";

drop table "public"."vr_sessions";

create table "public"."patient_records" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "session_id" bigint not null,
    "exercise_id" bigint not null,
    "patient_uid" uuid not null
);


alter table "public"."patient_records" enable row level security;

create table "public"."patient_sessions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "patient_uid" uuid,
    "modality" modality
);


alter table "public"."patient_sessions" enable row level security;

alter table "public"."default_exercises" alter column "focus_type" set data type record_types using "focus_type"::text::record_types;

alter table "public"."exercises" drop column "focus_type";

alter table "public"."exercises" add column "record_type" record_types not null default 'strength'::record_types;

drop type "public"."focus_types";

drop type "public"."unit_modality";

CREATE INDEX idx_vr_sessions_patient_id ON public.patient_sessions USING btree (patient_uid);

CREATE INDEX idx_vr_sessions_patient_uid ON public.patient_sessions USING btree (patient_uid);

CREATE UNIQUE INDEX patient_achievements_pkey ON public.patient_records USING btree (id);

CREATE UNIQUE INDEX vr_sessions_pkey ON public.patient_sessions USING btree (id);

alter table "public"."patient_records" add constraint "patient_achievements_pkey" PRIMARY KEY using index "patient_achievements_pkey";

alter table "public"."patient_sessions" add constraint "vr_sessions_pkey" PRIMARY KEY using index "vr_sessions_pkey";

alter table "public"."patient_records" add constraint "patient_achievements_patient_uid_fkey" FOREIGN KEY (patient_uid) REFERENCES families(uid) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."patient_records" validate constraint "patient_achievements_patient_uid_fkey";

alter table "public"."patient_records" add constraint "patient_achievements_vr_session_id_fkey" FOREIGN KEY (session_id) REFERENCES patient_sessions(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."patient_records" validate constraint "patient_achievements_vr_session_id_fkey";

alter table "public"."patient_sessions" add constraint "vr_sessions_patient_id_fkey" FOREIGN KEY (patient_uid) REFERENCES families(uid) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."patient_sessions" validate constraint "vr_sessions_patient_id_fkey";

grant delete on table "public"."patient_records" to "anon";

grant insert on table "public"."patient_records" to "anon";

grant references on table "public"."patient_records" to "anon";

grant select on table "public"."patient_records" to "anon";

grant trigger on table "public"."patient_records" to "anon";

grant truncate on table "public"."patient_records" to "anon";

grant update on table "public"."patient_records" to "anon";

grant delete on table "public"."patient_records" to "authenticated";

grant insert on table "public"."patient_records" to "authenticated";

grant references on table "public"."patient_records" to "authenticated";

grant select on table "public"."patient_records" to "authenticated";

grant trigger on table "public"."patient_records" to "authenticated";

grant truncate on table "public"."patient_records" to "authenticated";

grant update on table "public"."patient_records" to "authenticated";

grant delete on table "public"."patient_records" to "service_role";

grant insert on table "public"."patient_records" to "service_role";

grant references on table "public"."patient_records" to "service_role";

grant select on table "public"."patient_records" to "service_role";

grant trigger on table "public"."patient_records" to "service_role";

grant truncate on table "public"."patient_records" to "service_role";

grant update on table "public"."patient_records" to "service_role";

grant delete on table "public"."patient_sessions" to "anon";

grant insert on table "public"."patient_sessions" to "anon";

grant references on table "public"."patient_sessions" to "anon";

grant select on table "public"."patient_sessions" to "anon";

grant trigger on table "public"."patient_sessions" to "anon";

grant truncate on table "public"."patient_sessions" to "anon";

grant update on table "public"."patient_sessions" to "anon";

grant delete on table "public"."patient_sessions" to "authenticated";

grant insert on table "public"."patient_sessions" to "authenticated";

grant references on table "public"."patient_sessions" to "authenticated";

grant select on table "public"."patient_sessions" to "authenticated";

grant trigger on table "public"."patient_sessions" to "authenticated";

grant truncate on table "public"."patient_sessions" to "authenticated";

grant update on table "public"."patient_sessions" to "authenticated";

grant delete on table "public"."patient_sessions" to "service_role";

grant insert on table "public"."patient_sessions" to "service_role";

grant references on table "public"."patient_sessions" to "service_role";

grant select on table "public"."patient_sessions" to "service_role";

grant trigger on table "public"."patient_sessions" to "service_role";

grant truncate on table "public"."patient_sessions" to "service_role";

grant update on table "public"."patient_sessions" to "service_role";
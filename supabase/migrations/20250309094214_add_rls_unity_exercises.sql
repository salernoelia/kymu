revoke delete on table "public"."training_plans" from "anon";

revoke insert on table "public"."training_plans" from "anon";

revoke references on table "public"."training_plans" from "anon";

revoke select on table "public"."training_plans" from "anon";   

revoke trigger on table "public"."training_plans" from "anon";

revoke truncate on table "public"."training_plans" from "anon";

revoke update on table "public"."training_plans" from "anon";

revoke delete on table "public"."training_plans" from "authenticated";

revoke insert on table "public"."training_plans" from "authenticated";

revoke references on table "public"."training_plans" from "authenticated";

revoke select on table "public"."training_plans" from "authenticated";

revoke trigger on table "public"."training_plans" from "authenticated";

revoke truncate on table "public"."training_plans" from "authenticated";

revoke update on table "public"."training_plans" from "authenticated";

revoke delete on table "public"."training_plans" from "service_role";

revoke insert on table "public"."training_plans" from "service_role";

revoke references on table "public"."training_plans" from "service_role";

revoke select on table "public"."training_plans" from "service_role";

revoke trigger on table "public"."training_plans" from "service_role";

revoke truncate on table "public"."training_plans" from "service_role";

revoke update on table "public"."training_plans" from "service_role";


alter table "public"."training_plans" drop constraint "training_plans_patient_id_fkey";

alter table "public"."training_plans" drop constraint "training_plans_therapist_id_fkey";

alter table "public"."training_blocks" drop constraint "public_training_blocks_training_plan_id_fkey";

alter table "public"."training_plans" drop constraint "training_plans_pkey";

drop index if exists "public"."idx_training_plans_patient_id";

drop index if exists "public"."idx_training_plans_patient_uid";

drop index if exists "public"."idx_training_plans_therapist_uid";

drop index if exists "public"."training_plans_pkey";

drop table "public"."training_plans";

create table "public"."training_units" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "patient_uid" uuid not null,
    "therapist_uid" uuid not null,
    "name" text not null,
    "description" text
);


alter table "public"."training_units" enable row level security;

alter table "public"."training_blocks" drop column "training_plan_id";

alter table "public"."training_blocks" add column "patient_uid" uuid;

alter table "public"."training_blocks" add column "therapist_uid" uuid;

alter table "public"."training_blocks" add column "training_unit_id" bigint not null;

CREATE INDEX idx_training_plans_patient_id ON public.training_units USING btree (patient_uid);

CREATE INDEX idx_training_plans_patient_uid ON public.training_units USING btree (patient_uid);

CREATE INDEX idx_training_plans_therapist_uid ON public.training_units USING btree (therapist_uid);

CREATE UNIQUE INDEX training_plans_pkey ON public.training_units USING btree (id);

alter table "public"."training_units" add constraint "training_plans_pkey" PRIMARY KEY using index "training_plans_pkey";

alter table "public"."training_blocks" add constraint "public_training_blocks_patient_uid_fkey" FOREIGN KEY (patient_uid) REFERENCES families(uid) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."training_blocks" validate constraint "public_training_blocks_patient_uid_fkey";

alter table "public"."training_blocks" add constraint "public_training_blocks_therapist_uid_fkey" FOREIGN KEY (therapist_uid) REFERENCES therapists(uid) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."training_blocks" validate constraint "public_training_blocks_therapist_uid_fkey";

alter table "public"."training_units" add constraint "training_plans_patient_id_fkey" FOREIGN KEY (patient_uid) REFERENCES families(uid) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."training_units" validate constraint "training_plans_patient_id_fkey";

alter table "public"."training_units" add constraint "training_plans_therapist_id_fkey" FOREIGN KEY (therapist_uid) REFERENCES therapists(uid) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."training_units" validate constraint "training_plans_therapist_id_fkey";

alter table "public"."training_blocks" add constraint "public_training_blocks_training_plan_id_fkey" FOREIGN KEY (training_unit_id) REFERENCES training_units(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."training_blocks" validate constraint "public_training_blocks_training_plan_id_fkey";

grant delete on table "public"."training_units" to "anon";

grant insert on table "public"."training_units" to "anon";

grant references on table "public"."training_units" to "anon";

grant select on table "public"."training_units" to "anon";

grant trigger on table "public"."training_units" to "anon";

grant truncate on table "public"."training_units" to "anon";

grant update on table "public"."training_units" to "anon";

grant delete on table "public"."training_units" to "authenticated";

grant insert on table "public"."training_units" to "authenticated";

grant references on table "public"."training_units" to "authenticated";

grant select on table "public"."training_units" to "authenticated";

grant trigger on table "public"."training_units" to "authenticated";

grant truncate on table "public"."training_units" to "authenticated";

grant update on table "public"."training_units" to "authenticated";

grant delete on table "public"."training_units" to "service_role";

grant insert on table "public"."training_units" to "service_role";

grant references on table "public"."training_units" to "service_role";

grant select on table "public"."training_units" to "service_role";

grant trigger on table "public"."training_units" to "service_role";

grant truncate on table "public"."training_units" to "service_role";

grant update on table "public"."training_units" to "service_role";

create policy "Enable read access for all users"
on "public"."default_scenes"
as permissive
for select
to public
using (true);


create policy "Enable insert for users based on therapist_uid"
on "public"."training_blocks"
as permissive
for insert
to public
with check ((auth.uid() = therapist_uid));


create policy "Enable select for users based on therapist_uid"
on "public"."training_blocks"
as permissive
for select
to public
using ((auth.uid() = therapist_uid));


create policy "Enable insert for users based on therapist_uid"
on "public"."training_units"
as permissive
for insert
to public
with check ((auth.uid() = therapist_uid));


create policy "Enable select for users based on therapist_uid"
on "public"."training_units"
as permissive
for select
to public
using ((auth.uid() = therapist_uid));
